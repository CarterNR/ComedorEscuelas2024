@model IEnumerable<FrontEnd.Models.ProductoViewModel>

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@ViewData["Title"]</title>
    <link rel="shortcut icon" href="../images/favicon.ico" />
    <link rel="stylesheet" href="../css/backend-plugin.min.css">
    <link rel="stylesheet" href="../css/backend.css?v=1.0.0">
    <link rel="stylesheet" href="../vendor/line-awesome/dist/line-awesome/css/line-awesome.min.css">
    <link rel="stylesheet" href="../vendor/remixicon/fonts/remixicon.css">
</head>
<body>

    <div class="content-page">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="d-flex flex-wrap align-items-center justify-content-between mb-4">
                        <div>
                            <h4 class="mb-3">Productos</h4>
                        </div>
                        <a class="btn btn-primary add-list" asp-action="Create">
                            <i class="las la-plus mr-3"></i><span>Nuevo Producto</span>
                        </a>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="table-responsive rounded mb-3">
                        <table class="data-table table mb-0 tbl-server-info">
                            <thead class="bg-white text-uppercase">
                                <tr class="ligth ligth-data">
                                    <th>@Html.DisplayNameFor(model => model.IdProducto)</th>
                                    <th>@Html.DisplayNameFor(model => model.NombreProducto)</th>
                                    <th>@Html.DisplayNameFor(model => model.Cantidad)</th>
                                    <th>@Html.DisplayNameFor(model => model.Imagen)</th>
                                    <th>@Html.DisplayNameFor(model => model.Estado)</th>
                                    <th>@Html.DisplayNameFor(model => model.IdProveedor)</th>
                                    <th>@Html.DisplayNameFor(model => model.IdEscuela)</th>
                                    <th>@Html.DisplayNameFor(model => model.NombreProveedor)</th>
                                    <th>@Html.DisplayNameFor(model => model.NombreEscuela)</th>
                                    <th>Opciones</th>
                                </tr>
                            </thead>
                            <tbody class="ligth-body">
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.IdProducto)</td>
                                        <td>@Html.DisplayFor(modelItem => item.NombreProducto)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Cantidad)</td>
                                        <td>
                                            @if (item.Imagen != null)
                                            {
                                                <img src="@Url.Action("MostrarImagen", new { id = item.IdProducto })"
                                                     alt="Imagen del Producto"
                                                     class="img-thumbnail"
                                                     style="max-width: 100px; max-height: 100px;" />
                                            }
                                            else
                                            {
                                                <span>Sin imagen</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="badge @(item.Estado ?? false ? "badge-success" : "badge-danger")">
                                                @(item.Estado.HasValue ? (item.Estado.Value ? "Activo" : "Inactivo") : "Desconocido")
                                            </div>
                                        </td>
                                        <td>@Html.DisplayFor(modelItem => item.IdProveedor)</td>
                                        <td>@Html.DisplayFor(modelItem => item.IdEscuela)</td>
                                        <td>@Html.DisplayFor(modelItem => item.NombreProveedor)</td>
                                        <td>@Html.DisplayFor(modelItem => item.NombreEscuela)</td>
                                        <td>
                                            <div class="d-flex align-items-center list-action">
                                                <a class="badge badge-info mr-2" data-toggle="tooltip" data-placement="top" title="Ver detalles"
                                                   href="@Url.Action("Details", "Producto", new { id = item.IdProducto })">
                                                    <i class="ri-eye-line mr-0"></i>
                                                </a>
                                                <a class="badge bg-success mr-2" data-toggle="tooltip" data-placement="top" title="Editar"
                                                   href="@Url.Action("Edit", "Producto", new { id = item.IdProducto })">
                                                    <i class="ri-pencil-line mr-0"></i>
                                                </a>
                                                <a class="badge bg-warning mr-2" data-toggle="tooltip" data-placement="top" title="Borrar"
                                                   href="@Url.Action("Delete", "Producto", new { id = item.IdProducto })">
                                                    <i class="ri-delete-bin-line mr-0"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Backend Bundle JavaScript -->
    <script src="../assets/js/backend-bundle.min.js"></script>
    <script src="../assets/js/table-treeview.js"></script>
    <script src="../assets/js/customizer.js"></script>
    <script async src="../assets/js/chart-custom.js"></script>
    <script src="../assets/js/app.js"></script>

</body>
</html>
