@model FrontEnd.Models.UsuarioViewModel

@{
    ViewData["Title"] = "Editar";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@ViewData["Title"]</title>

    <link rel="shortcut icon" href="/images/favicon.ico" />
    <link rel="stylesheet" href="/css/backend-plugin.min.css">
    <link rel="stylesheet" href="/css/backend.css?v=1.0.0">
    <link rel="stylesheet" href="/vendor/fortawesome/fontawesome-free/css/all.min.css">
    <link rel="stylesheet" href="/vendor/line-awesome/dist/line-awesome/css/line-awesome.min.css">
    <link rel="stylesheet" href="/vendor/remixicon/fonts/remixicon.css">
</head>

<body>

    <div class="content-page">
        <div class="container-fluid add-form-list">
            <div class="row">
                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between">
                            <div class="header-title d-flex align-items-center">
                                <a asp-action="Index" class="btn btn-info mr-2">
                                    <i class="fas fa-arrow-left"></i>
                                </a>
                                <h4 class="card-title mb-0">Editar Usuario</h4>
                            </div>
                        </div>
                        <div class="card-body">
                            <form asp-action="Edit" method="post">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                                @Html.HiddenFor(model => model.IdUsuario)  @* Cambiar a hidden *@


                                <div class="form-group mb-5">
                                    <label>Nombre de usuario</label>
                                    <input asp-for="NombreUsuario" class="form-control" />
                                    <span asp-validation-for="NombreUsuario" class="text-danger"></span>
                                </div>


                                <!-- Campo oculto donde se juntará todo -->
                                <div class="form-group" style="display:none;">
                                    <input asp-for="NombreCompleto" class="form-control" id="nombreCompleto" />
                                    <span asp-validation-for="NombreCompleto" class="text-danger"></span>
                                </div>






                                <div class="row g-3">
                                    <div class="col">
                                        <div class="form-group">
                                            <label class="control-label">Primer Nombre</label>
                                            <input class="form-control" id="primerNombre" />
                                            <span class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col">
                                        <div class="form-group">
                                            <label class="control-label">Segundo Nombre</label>
                                            <input class="form-control" id="segundoNombre" />
                                            <span class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>

                                <div class="row g-3 mb-4">
                                    <div class="col">
                                        <div class="form-group">
                                            <label class="control-label">Primer Apellido</label>
                                            <input class="form-control" id="primerApellido" />
                                            <span class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="col">
                                        <div class="form-group mb-4">
                                            <label class="control-label">Segundo Apellido</label>
                                            <input class="form-control" id="segundoApellido" />
                                            <span class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>














                                <div class="form-group">
                                    <label for="IdTipoCedula">Tipo de Cédula</label>
                                    @Html.DropDownListFor(
                                             model => model.IdTipoCedula,
                                             Model.ListaTiposCedulas,
                                             new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IdTipoCedula, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label>Cédula</label>
                                    <input asp-for="Cedula" class="form-control" />
                                    <span asp-validation-for="Cedula" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label>Clave</label>
                                    <input asp-for="Clave" class="form-control" />
                                    <span asp-validation-for="Clave" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label>Teléfono</label>
                                    <input asp-for="Telefono" class="form-control" />
                                    <span asp-validation-for="Telefono" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label>Dirección</label>
                                    <input asp-for="Direccion" class="form-control" />
                                    <span asp-validation-for="Direccion" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label>Correo Electrónico</label>
                                    <input asp-for="CorreoElectronico" class="form-control" />
                                    <span asp-validation-for="CorreoElectronico" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Estado" class="control-label"></label>
                                    <select asp-for="Estado" class="form-control">
                                        <option value="True">Activo</option>
                                        <option value="False">Inactivo</option>
                                    </select>
                                    <span asp-validation-for="Estado" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label for="IdEscuela">Escuela</label>
                                    @Html.DropDownListFor(
                                             model => model.IdEscuela,
                                             Model.ListaEscuelas,
                                             new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IdEscuela, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <label for="IdRol">Rol</label>
                                    @Html.DropDownListFor(
                                             model => model.IdRol,
                                             Model.ListaRoles,
                                             new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.IdRol, "", new { @class = "text-danger" })
                                </div>
                    

                                <div class="form-group">
                                    <button type="submit" value="Save" class="btn btn-success">Guardar cambios</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <footer class="iq-footer">
        <div class="container-fluid">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-6">
                            <ul class="list-inline mb-0">
                                <li class="list-inline-item"><a href="../backend/privacy-policy.html">Privacy Policy</a></li>
                                <li class="list-inline-item"><a href="../backend/terms-of-service.html">Terms of Use</a></li>
                            </ul>
                        </div>
                        <div class="col-lg-6 text-right">
                            <span class="mr-1"><script>document.write(new Date().getFullYear())</script>©</span> <a href="#" class="">POS Dash</a>.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <script src="/js/backend-bundle.min.js"></script>
    <script src="/js/table-treeview.js"></script>
    <script src="/js/customizer.js"></script>
    <script async src="/js/chart-custom.js"></script>
    <script src="/js/app.js"></script>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/lib/jquery/dist/jquery.min.js"></script>
    <script src="/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/backend-bundle.min.js"></script>
    <script src="/js/app.js"></script>

    <script>
        function separarNombreCompletoAvanzado() {
            const nombreCompleto = document.querySelector('input[name="NombreCompleto"]').value.trim();

            if (nombreCompleto) {
                // Limpiar espacios múltiples y dividir
                const partes = nombreCompleto.replace(/\s+/g, ' ').split(' ');

                // Limpiar campos primero
                document.getElementById('primerApellido').value = '';
                document.getElementById('segundoApellido').value = '';
                document.getElementById('primerNombre').value = '';
                document.getElementById('segundoNombre').value = '';

                // Asignar según disponibilidad
                switch (partes.length) {
                    case 1:
                        // Solo una palabra - asumimos que es primer apellido
                        document.getElementById('primerApellido').value = partes[0];
                        break;
                    case 2:
                        // Dos palabras - primer apellido y primer nombre
                        document.getElementById('primerApellido').value = partes[0];
                        document.getElementById('primerNombre').value = partes[1];
                        break;
                    case 3:
                        // Tres palabras - primer apellido, segundo apellido, primer nombre
                        document.getElementById('primerApellido').value = partes[0];
                        document.getElementById('segundoApellido').value = partes[1];
                        document.getElementById('primerNombre').value = partes[2];
                        break;
                    default:
                        // Cuatro o más palabras - formato completo
                        document.getElementById('primerApellido').value = partes[0];
                        document.getElementById('segundoApellido').value = partes[1];
                        document.getElementById('primerNombre').value = partes[2];
                        document.getElementById('segundoNombre').value = partes.slice(3).join(' ');
                        break;
                }
            }
        }

                document.addEventListener('DOMContentLoaded', function() {
            const nombreCompletoInput = document.querySelector('input[name="NombreCompleto"]');

            if (nombreCompletoInput) {
                // Opción 1: Separar automáticamente cuando se pierde el foco
                nombreCompletoInput.addEventListener('blur', separarNombreCompletoAvanzado);

                // Opción 2: Separar en tiempo real (opcional, puede ser molesto)
                // nombreCompletoInput.addEventListener('input', separarNombreCompletoAvanzado);
            }
        });

                window.onload = function() {
            separarNombreCompletoAvanzado();
        };
    </script>

    <script>
        const primerNombre = document.getElementById('primerNombre');
        const segundoNombre = document.getElementById('segundoNombre');
        const primerApellido = document.getElementById('primerApellido');
        const segundoApellido = document.getElementById('segundoApellido');
        const nombreCompleto = document.getElementById('nombreCompleto');



        function actualizarNombreCompleto() {
          const pn = primerNombre.value.trim();
          const sn = segundoNombre.value.trim();
          const pa = primerApellido.value.trim();
          const sa = segundoApellido.value.trim();

          const partes = [pa, sa, pn, sn].filter(x => x.length > 0);
          nombreCompleto.value = partes.join(' ');
        }




        // Función combinada que actualiza ambos campos
        function actualizarCampos() {
            actualizarNombreCompleto();
        }

        // Event listeners corregidos - ahora llaman a la función combinada
        primerNombre.addEventListener('input', actualizarCampos);
        segundoNombre.addEventListener('input', actualizarCampos);
        primerApellido.addEventListener('input', actualizarCampos);
        segundoApellido.addEventListener('input', actualizarCampos);
    </script>



</body>
</html>
